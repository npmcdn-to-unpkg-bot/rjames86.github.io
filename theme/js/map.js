// Generated by CoffeeScript 1.10.0
(function() {
  var SpotMap, ce, d;

  d = React.DOM;

  ce = React.createElement;

  SpotMap = React.createFactory(React.createClass({
    displayName: "SpotMap",
    defaultPublicToken: "pk.eyJ1IjoicmphbWVzODYiLCJhIjoiY2ltam53d2F5MDBzZnY4a2cyaWR4Y3pnMyJ9.SM84_1rqm7WiwAl4uO7RIw",
    propTypes: {
      activity: React.PropTypes.object
    },
    coords: null,
    photos: null,
    mymap: null,
    parseCoords: function() {
      var i, item, len, ref, ret;
      ret = [];
      ref = this.coords;
      for (i = 0, len = ref.length; i < len; i++) {
        item = ref[i];
        ret.push([item.latitude, item.longitude]);
      }
      return ret;
    },
    createPopUps: function() {
      var i, item, len, marker, ref, results;
      ref = this.coords;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        item = ref[i];
        results.push(marker = new L.marker([item.latitude, item.longitude]).bindPopup("" + item.datetime, {
          minWith: 100
        }).addTo(mymap));
      }
      return results;
    },
    createIcon: function(url) {
      return L.icon({
        iconUrl: url,
        iconSize: [32, 32]
      });
    },
    addPhotos: function() {
      var i, item, len, marker, ref, results;
      ref = this.photos;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        item = ref[i];
        if (item.latitude == null) {
          continue;
        }
        results.push(marker = new L.marker([item.latitude, item.longitude], {
          icon: this.createIcon(item.thumbnail)
        }).bindPopup("<img src='" + item.image_url + "'>", {
          minWidth: 320
        }).addTo(this.mymap));
      }
      return results;
    },
    addLayer: function() {
      this.polyline = L.polyline(this.parseCoords(), {
        color: "red"
      }).addTo(this.mymap);
      return this.createPopUps();
    },
    componentDidMount: function() {
      $.ajax({
        url: "https://dl.dropboxusercontent.com/s/0u9acsrnxqv1w9g/tracking_info.json",
        success: (function(_this) {
          return function(res) {
            var first, last, myMapObj, ref, setview;
            _this.coords = JSON.parse(res);
            myMapObj = {
              zoom: 15
            };
            if (_this.coords.length) {
              ref = _this.coords, first = ref[0], last = ref[ref.length - 1];
              setview = [last.latitude, last.longitude];
              myMapObj['center'] = setview;
            }
            window.mymap = L.map('map', myMapObj);
            _this.mymap = window.mymap;
            L.tileLayer("https://api.mapbox.com/styles/v1/mapbox/streets-v9/tiles/256/{z}/{x}/{y}?access_token=" + _this.defaultPublicToken, {
              maxZoom: 18,
              accessToken: _this.defaultPublicToken
            }).addTo(_this.mymap);
            return _this.addLayer();
          };
        })(this)
      });
      return $.ajax({
        url: "https://dl.dropboxusercontent.com/s/aekt6faujrfewhm/photo_info.json",
        success: (function(_this) {
          return function(res) {
            _this.photos = JSON.parse(res);
            return _this.addPhotos();
          };
        })(this)
      });
    },
    render: function() {
      return d.div({
        className: "map-container",
        style: {
          "height": window.innerHeight + "px"
        }
      }, d.div({
        id: "map"
      }));
    }
  }));

  $(function() {
    var react_content;
    react_content = document.getElementById('widget');
    return ReactDOM.render(ce(SpotMap, null, null), react_content);
  });

}).call(this);
